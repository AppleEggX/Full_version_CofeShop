//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CofeWebApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class BasketDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Paid {
            get {
                return this.PaidField;
            }
            set {
                if ((this.PaidField.Equals(value) != true)) {
                    this.PaidField = value;
                    this.RaisePropertyChanged("Paid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SumPrice {
            get {
                return this.SumPriceField;
            }
            set {
                if ((this.SumPriceField.Equals(value) != true)) {
                    this.SumPriceField = value;
                    this.RaisePropertyChanged("SumPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((this.User_IdField.Equals(value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketItemDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class BasketItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BasketItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Basket_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.ProductType ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BasketItemId {
            get {
                return this.BasketItemIdField;
            }
            set {
                if ((this.BasketItemIdField.Equals(value) != true)) {
                    this.BasketItemIdField = value;
                    this.RaisePropertyChanged("BasketItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Basket_Id {
            get {
                return this.Basket_IdField;
            }
            set {
                if ((this.Basket_IdField.Equals(value) != true)) {
                    this.Basket_IdField = value;
                    this.RaisePropertyChanged("Basket_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.ProductType ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((this.ProductTypeField.Equals(value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_Id {
            get {
                return this.Product_IdField;
            }
            set {
                if ((this.Product_IdField.Equals(value) != true)) {
                    this.Product_IdField = value;
                    this.RaisePropertyChanged("Product_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_name {
            get {
                return this.Product_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_nameField, value) != true)) {
                    this.Product_nameField = value;
                    this.RaisePropertyChanged("Product_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoffeeDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class CoffeeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.CoffeeType CoffeeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.CountryOfOrigin OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StrengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.ProductType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.CoffeeType CoffeeType {
            get {
                return this.CoffeeTypeField;
            }
            set {
                if ((this.CoffeeTypeField.Equals(value) != true)) {
                    this.CoffeeTypeField = value;
                    this.RaisePropertyChanged("CoffeeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.CountryOfOrigin Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((this.OriginField.Equals(value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Strength {
            get {
                return this.StrengthField;
            }
            set {
                if ((this.StrengthField.Equals(value) != true)) {
                    this.StrengthField = value;
                    this.RaisePropertyChanged("Strength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.ProductType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class CourseDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime[] AvailableStartDatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.CourseType CourseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.Difficulty DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.ProductType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime[] AvailableStartDates {
            get {
                return this.AvailableStartDatesField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableStartDatesField, value) != true)) {
                    this.AvailableStartDatesField = value;
                    this.RaisePropertyChanged("AvailableStartDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.CourseType CourseType {
            get {
                return this.CourseTypeField;
            }
            set {
                if ((this.CourseTypeField.Equals(value) != true)) {
                    this.CourseTypeField = value;
                    this.RaisePropertyChanged("CourseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.Difficulty Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Length {
            get {
                return this.LengthField;
            }
            set {
                if ((object.ReferenceEquals(this.LengthField, value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.ProductType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class ProductDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.ProductType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.ProductType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class SubscriptionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.Coffee CoffeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pocos.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.Coffee Coffee {
            get {
                return this.CoffeeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoffeeField, value) != true)) {
                    this.CoffeeField = value;
                    this.RaisePropertyChanged("Coffee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PercentDiscount {
            get {
                return this.PercentDiscountField;
            }
            set {
                if ((this.PercentDiscountField.Equals(value) != true)) {
                    this.PercentDiscountField = value;
                    this.RaisePropertyChanged("PercentDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pocos.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/Services")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Admin {
            get {
                return this.AdminField;
            }
            set {
                if ((this.AdminField.Equals(value) != true)) {
                    this.AdminField = value;
                    this.RaisePropertyChanged("Admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBaskets", ReplyAction="http://tempuri.org/IService1/GetAllBasketsResponse")]
        CofeWebApplication.ServiceReference1.BasketDTO[] GetAllBaskets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBaskets", ReplyAction="http://tempuri.org/IService1/GetAllBasketsResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO[]> GetAllBasketsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindBasketById", ReplyAction="http://tempuri.org/IService1/FindBasketByIdResponse")]
        CofeWebApplication.ServiceReference1.BasketDTO FindBasketById(int BasketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindBasketById", ReplyAction="http://tempuri.org/IService1/FindBasketByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> FindBasketByIdAsync(int BasketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateBasket", ReplyAction="http://tempuri.org/IService1/CreateBasketResponse")]
        CofeWebApplication.ServiceReference1.BasketDTO CreateBasket(Pocos.Basket basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateBasket", ReplyAction="http://tempuri.org/IService1/CreateBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> CreateBasketAsync(Pocos.Basket basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBasket", ReplyAction="http://tempuri.org/IService1/UpdateBasketResponse")]
        CofeWebApplication.ServiceReference1.BasketDTO UpdateBasket(Pocos.Basket basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBasket", ReplyAction="http://tempuri.org/IService1/UpdateBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> UpdateBasketAsync(Pocos.Basket basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBasket", ReplyAction="http://tempuri.org/IService1/DeleteBasketResponse")]
        CofeWebApplication.ServiceReference1.BasketDTO DeleteBasket(int basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBasket", ReplyAction="http://tempuri.org/IService1/DeleteBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> DeleteBasketAsync(int basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindBasketItemById", ReplyAction="http://tempuri.org/IService1/FindBasketItemByIdResponse")]
        CofeWebApplication.ServiceReference1.BasketItemDTO FindBasketItemById(int BasketItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindBasketItemById", ReplyAction="http://tempuri.org/IService1/FindBasketItemByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> FindBasketItemByIdAsync(int BasketItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateBasketItem", ReplyAction="http://tempuri.org/IService1/CreateBasketItemResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Pocos.Coffee))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Pocos.Course))]
        CofeWebApplication.ServiceReference1.BasketItemDTO CreateBasketItem(Pocos.BasketItem basketItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateBasketItem", ReplyAction="http://tempuri.org/IService1/CreateBasketItemResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> CreateBasketItemAsync(Pocos.BasketItem basketItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBasketItem", ReplyAction="http://tempuri.org/IService1/UpdateBasketItemResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Pocos.Coffee))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Pocos.Course))]
        CofeWebApplication.ServiceReference1.BasketItemDTO UpdateBasketItem(Pocos.BasketItem basketItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBasketItem", ReplyAction="http://tempuri.org/IService1/UpdateBasketItemResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> UpdateBasketItemAsync(Pocos.BasketItem basketItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBasketItem", ReplyAction="http://tempuri.org/IService1/DeleteBasketItemResponse")]
        CofeWebApplication.ServiceReference1.BasketItemDTO DeleteBasketItem(int basketItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBasketItem", ReplyAction="http://tempuri.org/IService1/DeleteBasketItemResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> DeleteBasketItemAsync(int basketItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCoffees", ReplyAction="http://tempuri.org/IService1/GetAllCoffeesResponse")]
        CofeWebApplication.ServiceReference1.CoffeeDTO[] GetAllCoffees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCoffees", ReplyAction="http://tempuri.org/IService1/GetAllCoffeesResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO[]> GetAllCoffeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindCoffeeById", ReplyAction="http://tempuri.org/IService1/FindCoffeeByIdResponse")]
        CofeWebApplication.ServiceReference1.CoffeeDTO FindCoffeeById(int CoffeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindCoffeeById", ReplyAction="http://tempuri.org/IService1/FindCoffeeByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> FindCoffeeByIdAsync(int CoffeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateCoffee", ReplyAction="http://tempuri.org/IService1/CreateCoffeeResponse")]
        CofeWebApplication.ServiceReference1.CoffeeDTO CreateCoffee(Pocos.Coffee coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateCoffee", ReplyAction="http://tempuri.org/IService1/CreateCoffeeResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> CreateCoffeeAsync(Pocos.Coffee coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCoffee", ReplyAction="http://tempuri.org/IService1/UpdateCoffeeResponse")]
        CofeWebApplication.ServiceReference1.CoffeeDTO UpdateCoffee(Pocos.Coffee coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCoffee", ReplyAction="http://tempuri.org/IService1/UpdateCoffeeResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> UpdateCoffeeAsync(Pocos.Coffee coffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCoffee", ReplyAction="http://tempuri.org/IService1/DeleteCoffeeResponse")]
        CofeWebApplication.ServiceReference1.CoffeeDTO DeleteCoffee(int CoffeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCoffee", ReplyAction="http://tempuri.org/IService1/DeleteCoffeeResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> DeleteCoffeeAsync(int CoffeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCourses", ReplyAction="http://tempuri.org/IService1/GetAllCoursesResponse")]
        CofeWebApplication.ServiceReference1.CourseDTO[] GetAllCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCourses", ReplyAction="http://tempuri.org/IService1/GetAllCoursesResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO[]> GetAllCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindCourseById", ReplyAction="http://tempuri.org/IService1/FindCourseByIdResponse")]
        CofeWebApplication.ServiceReference1.CourseDTO FindCourseById(int CourseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindCourseById", ReplyAction="http://tempuri.org/IService1/FindCourseByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> FindCourseByIdAsync(int CourseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateCourse", ReplyAction="http://tempuri.org/IService1/CreateCourseResponse")]
        CofeWebApplication.ServiceReference1.CourseDTO CreateCourse(Pocos.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateCourse", ReplyAction="http://tempuri.org/IService1/CreateCourseResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> CreateCourseAsync(Pocos.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCourse", ReplyAction="http://tempuri.org/IService1/UpdateCourseResponse")]
        CofeWebApplication.ServiceReference1.CourseDTO UpdateCourse(Pocos.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCourse", ReplyAction="http://tempuri.org/IService1/UpdateCourseResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> UpdateCourseAsync(Pocos.Course course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCourse", ReplyAction="http://tempuri.org/IService1/DeleteCourseResponse")]
        CofeWebApplication.ServiceReference1.CourseDTO DeleteCourse(int CourseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCourse", ReplyAction="http://tempuri.org/IService1/DeleteCourseResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> DeleteCourseAsync(int CourseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateProduct", ReplyAction="http://tempuri.org/IService1/CreateProductResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Pocos.Coffee))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Pocos.Course))]
        CofeWebApplication.ServiceReference1.ProductDTO CreateProduct(Pocos.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateProduct", ReplyAction="http://tempuri.org/IService1/CreateProductResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.ProductDTO> CreateProductAsync(Pocos.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Pocos.Coffee))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Pocos.Course))]
        CofeWebApplication.ServiceReference1.ProductDTO UpdateProduct(Pocos.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProduct", ReplyAction="http://tempuri.org/IService1/UpdateProductResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.ProductDTO> UpdateProductAsync(Pocos.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSubscriptions", ReplyAction="http://tempuri.org/IService1/GetAllSubscriptionsResponse")]
        CofeWebApplication.ServiceReference1.SubscriptionDTO[] GetAllSubscriptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSubscriptions", ReplyAction="http://tempuri.org/IService1/GetAllSubscriptionsResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO[]> GetAllSubscriptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubscriptionByUserId", ReplyAction="http://tempuri.org/IService1/GetSubscriptionByUserIdResponse")]
        CofeWebApplication.ServiceReference1.SubscriptionDTO[] GetSubscriptionByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubscriptionByUserId", ReplyAction="http://tempuri.org/IService1/GetSubscriptionByUserIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO[]> GetSubscriptionByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubscriptionById", ReplyAction="http://tempuri.org/IService1/GetSubscriptionByIdResponse")]
        CofeWebApplication.ServiceReference1.SubscriptionDTO GetSubscriptionById(int SubscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubscriptionById", ReplyAction="http://tempuri.org/IService1/GetSubscriptionByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO> GetSubscriptionByIdAsync(int SubscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateSubscription", ReplyAction="http://tempuri.org/IService1/CreateSubscriptionResponse")]
        CofeWebApplication.ServiceReference1.SubscriptionDTO CreateSubscription(Pocos.Subscription newSubscrip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateSubscription", ReplyAction="http://tempuri.org/IService1/CreateSubscriptionResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO> CreateSubscriptionAsync(Pocos.Subscription newSubscrip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSubscriptionById", ReplyAction="http://tempuri.org/IService1/EditSubscriptionByIdResponse")]
        CofeWebApplication.ServiceReference1.SubscriptionDTO EditSubscriptionById(int subscriptionId, Pocos.Subscription newSubscribe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSubscriptionById", ReplyAction="http://tempuri.org/IService1/EditSubscriptionByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO> EditSubscriptionByIdAsync(int subscriptionId, Pocos.Subscription newSubscribe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUser", ReplyAction="http://tempuri.org/IService1/GetAllUserResponse")]
        CofeWebApplication.ServiceReference1.UserDTO[] GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUser", ReplyAction="http://tempuri.org/IService1/GetAllUserResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.UserDTO[]> GetAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        CofeWebApplication.ServiceReference1.UserDTO GetUserById(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.UserDTO> GetUserByIdAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        CofeWebApplication.ServiceReference1.UserDTO CreateUser(Pocos.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.UserDTO> CreateUserAsync(Pocos.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        CofeWebApplication.ServiceReference1.UserDTO EditUser(int userId, Pocos.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditUser", ReplyAction="http://tempuri.org/IService1/EditUserResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.UserDTO> EditUserAsync(int userId, Pocos.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        void DeleteUser(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddtoBasket", ReplyAction="http://tempuri.org/IService1/AddtoBasketResponse")]
        CofeWebApplication.ServiceReference1.BasketItemDTO AddtoBasket(int basketId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddtoBasket", ReplyAction="http://tempuri.org/IService1/AddtoBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> AddtoBasketAsync(int basketId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditBasketItem", ReplyAction="http://tempuri.org/IService1/EditBasketItemResponse")]
        CofeWebApplication.ServiceReference1.BasketItemDTO EditBasketItem(int basketItemId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditBasketItem", ReplyAction="http://tempuri.org/IService1/EditBasketItemResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> EditBasketItemAsync(int basketItemId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFromBasket", ReplyAction="http://tempuri.org/IService1/DeleteFromBasketResponse")]
        void DeleteFromBasket(int basketId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFromBasket", ReplyAction="http://tempuri.org/IService1/DeleteFromBasketResponse")]
        System.Threading.Tasks.Task DeleteFromBasketAsync(int basketId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckOutBasket", ReplyAction="http://tempuri.org/IService1/CheckOutBasketResponse")]
        CofeWebApplication.ServiceReference1.BasketDTO CheckOutBasket(int basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckOutBasket", ReplyAction="http://tempuri.org/IService1/CheckOutBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> CheckOutBasketAsync(int basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTheBasketItems", ReplyAction="http://tempuri.org/IService1/GetTheBasketItemsResponse")]
        CofeWebApplication.ServiceReference1.BasketItemDTO[] GetTheBasketItems(int basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTheBasketItems", ReplyAction="http://tempuri.org/IService1/GetTheBasketItemsResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO[]> GetTheBasketItemsAsync(int basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBasketItems", ReplyAction="http://tempuri.org/IService1/GetAllBasketItemsResponse")]
        CofeWebApplication.ServiceReference1.BasketItemDTO[] GetAllBasketItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBasketItems", ReplyAction="http://tempuri.org/IService1/GetAllBasketItemsResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO[]> GetAllBasketItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHistoryBasket", ReplyAction="http://tempuri.org/IService1/GetHistoryBasketResponse")]
        CofeWebApplication.ServiceReference1.BasketDTO[] GetHistoryBasket(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHistoryBasket", ReplyAction="http://tempuri.org/IService1/GetHistoryBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO[]> GetHistoryBasketAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTheBasket", ReplyAction="http://tempuri.org/IService1/GetTheBasketResponse")]
        CofeWebApplication.ServiceReference1.BasketDTO GetTheBasket(int basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTheBasket", ReplyAction="http://tempuri.org/IService1/GetTheBasketResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> GetTheBasketAsync(int basketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProduct", ReplyAction="http://tempuri.org/IService1/GetAllProductResponse")]
        CofeWebApplication.ServiceReference1.ProductDTO[] GetAllProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProduct", ReplyAction="http://tempuri.org/IService1/GetAllProductResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.ProductDTO[]> GetAllProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductById", ReplyAction="http://tempuri.org/IService1/GetProductByIdResponse")]
        CofeWebApplication.ServiceReference1.ProductDTO GetProductById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductById", ReplyAction="http://tempuri.org/IService1/GetProductByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.ProductDTO> GetProductByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCoffeeById", ReplyAction="http://tempuri.org/IService1/EditCoffeeByIdResponse")]
        CofeWebApplication.ServiceReference1.CoffeeDTO EditCoffeeById(int coffeeId, Pocos.Coffee newCoffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCoffeeById", ReplyAction="http://tempuri.org/IService1/EditCoffeeByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> EditCoffeeByIdAsync(int coffeeId, Pocos.Coffee newCoffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCourseById", ReplyAction="http://tempuri.org/IService1/EditCourseByIdResponse")]
        CofeWebApplication.ServiceReference1.CourseDTO EditCourseById(int courseId, Pocos.Course newCourse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCourseById", ReplyAction="http://tempuri.org/IService1/EditCourseByIdResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> EditCourseByIdAsync(int courseId, Pocos.Course newCourse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateNewCoffee", ReplyAction="http://tempuri.org/IService1/CreateNewCoffeeResponse")]
        CofeWebApplication.ServiceReference1.CoffeeDTO CreateNewCoffee(Pocos.Coffee newCoffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateNewCoffee", ReplyAction="http://tempuri.org/IService1/CreateNewCoffeeResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> CreateNewCoffeeAsync(Pocos.Coffee newCoffee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateNewCourse", ReplyAction="http://tempuri.org/IService1/CreateNewCourseResponse")]
        CofeWebApplication.ServiceReference1.CourseDTO CreateNewCourse(Pocos.Course newCourse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateNewCourse", ReplyAction="http://tempuri.org/IService1/CreateNewCourseResponse")]
        System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> CreateNewCourseAsync(Pocos.Course newCourse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        void DeleteProduct(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(int productId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CofeWebApplication.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CofeWebApplication.ServiceReference1.IService1>, CofeWebApplication.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CofeWebApplication.ServiceReference1.BasketDTO[] GetAllBaskets() {
            return base.Channel.GetAllBaskets();
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO[]> GetAllBasketsAsync() {
            return base.Channel.GetAllBasketsAsync();
        }
        
        public CofeWebApplication.ServiceReference1.BasketDTO FindBasketById(int BasketId) {
            return base.Channel.FindBasketById(BasketId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> FindBasketByIdAsync(int BasketId) {
            return base.Channel.FindBasketByIdAsync(BasketId);
        }
        
        public CofeWebApplication.ServiceReference1.BasketDTO CreateBasket(Pocos.Basket basket) {
            return base.Channel.CreateBasket(basket);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> CreateBasketAsync(Pocos.Basket basket) {
            return base.Channel.CreateBasketAsync(basket);
        }
        
        public CofeWebApplication.ServiceReference1.BasketDTO UpdateBasket(Pocos.Basket basket) {
            return base.Channel.UpdateBasket(basket);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> UpdateBasketAsync(Pocos.Basket basket) {
            return base.Channel.UpdateBasketAsync(basket);
        }
        
        public CofeWebApplication.ServiceReference1.BasketDTO DeleteBasket(int basket) {
            return base.Channel.DeleteBasket(basket);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> DeleteBasketAsync(int basket) {
            return base.Channel.DeleteBasketAsync(basket);
        }
        
        public CofeWebApplication.ServiceReference1.BasketItemDTO FindBasketItemById(int BasketItemId) {
            return base.Channel.FindBasketItemById(BasketItemId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> FindBasketItemByIdAsync(int BasketItemId) {
            return base.Channel.FindBasketItemByIdAsync(BasketItemId);
        }
        
        public CofeWebApplication.ServiceReference1.BasketItemDTO CreateBasketItem(Pocos.BasketItem basketItem) {
            return base.Channel.CreateBasketItem(basketItem);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> CreateBasketItemAsync(Pocos.BasketItem basketItem) {
            return base.Channel.CreateBasketItemAsync(basketItem);
        }
        
        public CofeWebApplication.ServiceReference1.BasketItemDTO UpdateBasketItem(Pocos.BasketItem basketItem) {
            return base.Channel.UpdateBasketItem(basketItem);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> UpdateBasketItemAsync(Pocos.BasketItem basketItem) {
            return base.Channel.UpdateBasketItemAsync(basketItem);
        }
        
        public CofeWebApplication.ServiceReference1.BasketItemDTO DeleteBasketItem(int basketItem) {
            return base.Channel.DeleteBasketItem(basketItem);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> DeleteBasketItemAsync(int basketItem) {
            return base.Channel.DeleteBasketItemAsync(basketItem);
        }
        
        public CofeWebApplication.ServiceReference1.CoffeeDTO[] GetAllCoffees() {
            return base.Channel.GetAllCoffees();
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO[]> GetAllCoffeesAsync() {
            return base.Channel.GetAllCoffeesAsync();
        }
        
        public CofeWebApplication.ServiceReference1.CoffeeDTO FindCoffeeById(int CoffeeId) {
            return base.Channel.FindCoffeeById(CoffeeId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> FindCoffeeByIdAsync(int CoffeeId) {
            return base.Channel.FindCoffeeByIdAsync(CoffeeId);
        }
        
        public CofeWebApplication.ServiceReference1.CoffeeDTO CreateCoffee(Pocos.Coffee coffee) {
            return base.Channel.CreateCoffee(coffee);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> CreateCoffeeAsync(Pocos.Coffee coffee) {
            return base.Channel.CreateCoffeeAsync(coffee);
        }
        
        public CofeWebApplication.ServiceReference1.CoffeeDTO UpdateCoffee(Pocos.Coffee coffee) {
            return base.Channel.UpdateCoffee(coffee);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> UpdateCoffeeAsync(Pocos.Coffee coffee) {
            return base.Channel.UpdateCoffeeAsync(coffee);
        }
        
        public CofeWebApplication.ServiceReference1.CoffeeDTO DeleteCoffee(int CoffeeId) {
            return base.Channel.DeleteCoffee(CoffeeId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> DeleteCoffeeAsync(int CoffeeId) {
            return base.Channel.DeleteCoffeeAsync(CoffeeId);
        }
        
        public CofeWebApplication.ServiceReference1.CourseDTO[] GetAllCourses() {
            return base.Channel.GetAllCourses();
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO[]> GetAllCoursesAsync() {
            return base.Channel.GetAllCoursesAsync();
        }
        
        public CofeWebApplication.ServiceReference1.CourseDTO FindCourseById(int CourseId) {
            return base.Channel.FindCourseById(CourseId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> FindCourseByIdAsync(int CourseId) {
            return base.Channel.FindCourseByIdAsync(CourseId);
        }
        
        public CofeWebApplication.ServiceReference1.CourseDTO CreateCourse(Pocos.Course course) {
            return base.Channel.CreateCourse(course);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> CreateCourseAsync(Pocos.Course course) {
            return base.Channel.CreateCourseAsync(course);
        }
        
        public CofeWebApplication.ServiceReference1.CourseDTO UpdateCourse(Pocos.Course course) {
            return base.Channel.UpdateCourse(course);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> UpdateCourseAsync(Pocos.Course course) {
            return base.Channel.UpdateCourseAsync(course);
        }
        
        public CofeWebApplication.ServiceReference1.CourseDTO DeleteCourse(int CourseId) {
            return base.Channel.DeleteCourse(CourseId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> DeleteCourseAsync(int CourseId) {
            return base.Channel.DeleteCourseAsync(CourseId);
        }
        
        public CofeWebApplication.ServiceReference1.ProductDTO CreateProduct(Pocos.Product product) {
            return base.Channel.CreateProduct(product);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.ProductDTO> CreateProductAsync(Pocos.Product product) {
            return base.Channel.CreateProductAsync(product);
        }
        
        public CofeWebApplication.ServiceReference1.ProductDTO UpdateProduct(Pocos.Product product) {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.ProductDTO> UpdateProductAsync(Pocos.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public CofeWebApplication.ServiceReference1.SubscriptionDTO[] GetAllSubscriptions() {
            return base.Channel.GetAllSubscriptions();
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO[]> GetAllSubscriptionsAsync() {
            return base.Channel.GetAllSubscriptionsAsync();
        }
        
        public CofeWebApplication.ServiceReference1.SubscriptionDTO[] GetSubscriptionByUserId(int userId) {
            return base.Channel.GetSubscriptionByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO[]> GetSubscriptionByUserIdAsync(int userId) {
            return base.Channel.GetSubscriptionByUserIdAsync(userId);
        }
        
        public CofeWebApplication.ServiceReference1.SubscriptionDTO GetSubscriptionById(int SubscriptionId) {
            return base.Channel.GetSubscriptionById(SubscriptionId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO> GetSubscriptionByIdAsync(int SubscriptionId) {
            return base.Channel.GetSubscriptionByIdAsync(SubscriptionId);
        }
        
        public CofeWebApplication.ServiceReference1.SubscriptionDTO CreateSubscription(Pocos.Subscription newSubscrip) {
            return base.Channel.CreateSubscription(newSubscrip);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO> CreateSubscriptionAsync(Pocos.Subscription newSubscrip) {
            return base.Channel.CreateSubscriptionAsync(newSubscrip);
        }
        
        public CofeWebApplication.ServiceReference1.SubscriptionDTO EditSubscriptionById(int subscriptionId, Pocos.Subscription newSubscribe) {
            return base.Channel.EditSubscriptionById(subscriptionId, newSubscribe);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.SubscriptionDTO> EditSubscriptionByIdAsync(int subscriptionId, Pocos.Subscription newSubscribe) {
            return base.Channel.EditSubscriptionByIdAsync(subscriptionId, newSubscribe);
        }
        
        public CofeWebApplication.ServiceReference1.UserDTO[] GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.UserDTO[]> GetAllUserAsync() {
            return base.Channel.GetAllUserAsync();
        }
        
        public CofeWebApplication.ServiceReference1.UserDTO GetUserById(int UserId) {
            return base.Channel.GetUserById(UserId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.UserDTO> GetUserByIdAsync(int UserId) {
            return base.Channel.GetUserByIdAsync(UserId);
        }
        
        public CofeWebApplication.ServiceReference1.UserDTO CreateUser(Pocos.User user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.UserDTO> CreateUserAsync(Pocos.User user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public CofeWebApplication.ServiceReference1.UserDTO EditUser(int userId, Pocos.User newUser) {
            return base.Channel.EditUser(userId, newUser);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.UserDTO> EditUserAsync(int userId, Pocos.User newUser) {
            return base.Channel.EditUserAsync(userId, newUser);
        }
        
        public void DeleteUser(int UserId) {
            base.Channel.DeleteUser(UserId);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int UserId) {
            return base.Channel.DeleteUserAsync(UserId);
        }
        
        public CofeWebApplication.ServiceReference1.BasketItemDTO AddtoBasket(int basketId, int productId, int quantity) {
            return base.Channel.AddtoBasket(basketId, productId, quantity);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> AddtoBasketAsync(int basketId, int productId, int quantity) {
            return base.Channel.AddtoBasketAsync(basketId, productId, quantity);
        }
        
        public CofeWebApplication.ServiceReference1.BasketItemDTO EditBasketItem(int basketItemId, int quantity) {
            return base.Channel.EditBasketItem(basketItemId, quantity);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO> EditBasketItemAsync(int basketItemId, int quantity) {
            return base.Channel.EditBasketItemAsync(basketItemId, quantity);
        }
        
        public void DeleteFromBasket(int basketId, int productId) {
            base.Channel.DeleteFromBasket(basketId, productId);
        }
        
        public System.Threading.Tasks.Task DeleteFromBasketAsync(int basketId, int productId) {
            return base.Channel.DeleteFromBasketAsync(basketId, productId);
        }
        
        public CofeWebApplication.ServiceReference1.BasketDTO CheckOutBasket(int basketId) {
            return base.Channel.CheckOutBasket(basketId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> CheckOutBasketAsync(int basketId) {
            return base.Channel.CheckOutBasketAsync(basketId);
        }
        
        public CofeWebApplication.ServiceReference1.BasketItemDTO[] GetTheBasketItems(int basketId) {
            return base.Channel.GetTheBasketItems(basketId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO[]> GetTheBasketItemsAsync(int basketId) {
            return base.Channel.GetTheBasketItemsAsync(basketId);
        }
        
        public CofeWebApplication.ServiceReference1.BasketItemDTO[] GetAllBasketItems() {
            return base.Channel.GetAllBasketItems();
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketItemDTO[]> GetAllBasketItemsAsync() {
            return base.Channel.GetAllBasketItemsAsync();
        }
        
        public CofeWebApplication.ServiceReference1.BasketDTO[] GetHistoryBasket(int userId) {
            return base.Channel.GetHistoryBasket(userId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO[]> GetHistoryBasketAsync(int userId) {
            return base.Channel.GetHistoryBasketAsync(userId);
        }
        
        public CofeWebApplication.ServiceReference1.BasketDTO GetTheBasket(int basketId) {
            return base.Channel.GetTheBasket(basketId);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.BasketDTO> GetTheBasketAsync(int basketId) {
            return base.Channel.GetTheBasketAsync(basketId);
        }
        
        public CofeWebApplication.ServiceReference1.ProductDTO[] GetAllProduct() {
            return base.Channel.GetAllProduct();
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.ProductDTO[]> GetAllProductAsync() {
            return base.Channel.GetAllProductAsync();
        }
        
        public CofeWebApplication.ServiceReference1.ProductDTO GetProductById(int id) {
            return base.Channel.GetProductById(id);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.ProductDTO> GetProductByIdAsync(int id) {
            return base.Channel.GetProductByIdAsync(id);
        }
        
        public CofeWebApplication.ServiceReference1.CoffeeDTO EditCoffeeById(int coffeeId, Pocos.Coffee newCoffee) {
            return base.Channel.EditCoffeeById(coffeeId, newCoffee);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> EditCoffeeByIdAsync(int coffeeId, Pocos.Coffee newCoffee) {
            return base.Channel.EditCoffeeByIdAsync(coffeeId, newCoffee);
        }
        
        public CofeWebApplication.ServiceReference1.CourseDTO EditCourseById(int courseId, Pocos.Course newCourse) {
            return base.Channel.EditCourseById(courseId, newCourse);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> EditCourseByIdAsync(int courseId, Pocos.Course newCourse) {
            return base.Channel.EditCourseByIdAsync(courseId, newCourse);
        }
        
        public CofeWebApplication.ServiceReference1.CoffeeDTO CreateNewCoffee(Pocos.Coffee newCoffee) {
            return base.Channel.CreateNewCoffee(newCoffee);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CoffeeDTO> CreateNewCoffeeAsync(Pocos.Coffee newCoffee) {
            return base.Channel.CreateNewCoffeeAsync(newCoffee);
        }
        
        public CofeWebApplication.ServiceReference1.CourseDTO CreateNewCourse(Pocos.Course newCourse) {
            return base.Channel.CreateNewCourse(newCourse);
        }
        
        public System.Threading.Tasks.Task<CofeWebApplication.ServiceReference1.CourseDTO> CreateNewCourseAsync(Pocos.Course newCourse) {
            return base.Channel.CreateNewCourseAsync(newCourse);
        }
        
        public void DeleteProduct(int productId) {
            base.Channel.DeleteProduct(productId);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(int productId) {
            return base.Channel.DeleteProductAsync(productId);
        }
    }
}
